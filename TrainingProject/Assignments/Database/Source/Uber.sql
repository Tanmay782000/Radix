CREATE DATABASE Uber
use Uber

CREATE TABLE OBJECT_TYPES
(
OBJ_TYPE_ID INT IDENTITY(1,1) PRIMARY KEY,
OBJ_NAME VARCHAR(70) NOT NULL,
)

CREATE TABLE OBJECT_DETAILS
(
OBJECT_DETAILS_ID INT IDENTITY(1,1) PRIMARY KEY,
OBJECT_TYPE_ID INT FOREIGN KEY REFERENCES OBJECT_TYPES(OBJ_TYPE_ID) NOT NULL,
OBJ_NAME VARCHAR(70) NOT NULL
)

CREATE TABLE ADMIN_DETAILS
(
ADMIN_ID INT IDENTITY(1,1) PRIMARY KEY,
ADMIN_NAME VARCHAR(50) NOT NULL,
ADMIN_USERNAME VARCHAR(40) NOT NULL,
ADMIN_PASSWORD VARCHAR(50) NOT NULL,
CREATE_DATE DATE NOT NULL,
MODIFIED_DATE DATE NOT NULL
)

CREATE TABLE PHONE_NO(
PHONE_ID INT IDENTITY(1,1) PRIMARY KEY,
Mobile_No BIGINT NOT NULL,
CREATE_DATE DATE NOT NULL,
MODIFIED_DATE DATE NOT NULL
)


select * from driver
select * from VEHICLE_DETAILS


CREATE TABLE CUSTOMER(
CUSTOMER_ID INT IDENTITY(1,1) PRIMARY KEY,
FIRST_NAME VARCHAR(50) NOT NULL,
LAST_NAME VARCHAR(50) NOT NULL,
PHONE_NO INT FOREIGN KEY REFERENCES PHONE_NO(PHONE_ID) NOT NULL,
EMAIL VARCHAR(50) NOT NULL,
ADDRESS VARCHAR(100) NOT NULL,
CREATE_DATE DATE NOT NULL,
MODIFIED_DATE DATE NOT NULL
)


CREATE TABLE LOCATION_DETAILS
(
LOCATION_DETAILS INT IDENTITY(1,1) PRIMARY KEY,
LOCATION_NAME VARCHAR(60) NOT NULL,
LOCATION_ADDRESS VARCHAR(200) NOT NULL,
PINCODE BIGINT NOT NULL,
LONGITUDE DECIMAL(15,8)NOT NULL,
LATITUDE DECIMAL(15,8) NOT NULL,
CREATE_DATE DATE NOT NULL,
MODIFIED_DATE DATE NOT NULL
)



CREATE TABLE BOOKING_REQUEST
(
BOOKING_ID INT IDENTITY(1,1) PRIMARY KEY,
PHONE_ID INT FOREIGN KEY REFERENCES PHONE_NO(PHONE_ID) NOT NULL,
SOURCE INT FOREIGN KEY REFERENCES LOCATION_DETAILS(LOCATION_DETAILS) NOT NULL,
DESTINATION INT FOREIGN KEY REFERENCES LOCATION_DETAILS(LOCATION_DETAILS) NOT NULL,
VEHICLE_ID INT FOREIGN KEY REFERENCES OBJECT_DETAILS(OBJECT_DETAILS_ID) not null,
STATUS_ID INT FOREIGN KEY REFERENCES OBJECT_DETAILS(OBJECT_DETAILS_ID)NOT NULL default(10),
DISTANCE bigint NOT NULL,
CREATE_DATE DATE NOT NULL,
MODIFIED_DATE DATE NOT NULL
)

CREATE TABLE PAYMENT(
PAYMENT_ID INT IDENTITY(1,1) PRIMARY KEY,
BOOKING_ID INT FOREIGN KEY REFERENCES BOOKING_REQUEST(BOOKING_ID) NOT NULL,
PAYMENT_METHOD INT FOREIGN KEY REFERENCES OBJECT_DETAILS(OBJECT_DETAILS_ID) NOT NULL,
AMOUNT BIGINT NOT NULL,
CREATE_DATE DATE NOT NULL,
MODIFIED_DATE DATE NOT NULL
)



CREATE TABLE DRIVER
(
DRIVER_ID INT IDENTITY(1,1) PRIMARY KEY,
FIRST_NAME VARCHAR(40) NOT NULL,
LAST_NAME VARCHAR(40) NOT NULL,
EMAIL VARCHAR(40) NOT NULL,
PASSWORD VARCHAR(40) NOT NULL,
PHONE_NO BIGINT NOT NULL,
ADDRESS VARCHAR(100) NOT NULL,
PROFILE_PHOTO VARCHAR(60), 
CREATE_DATE DATE NOT NULL,
MODIFIED_DATE DATE NOT NULL
)

alter table DRIVER add ADDRESS varchar(100) NOT NULL

delete from DRIVER
delete from VEHICLE_DETAILS

select * from VEHICLE_DETAILS
select * from DRIVER

CREATE TABLE VEHICLE_DETAILS
(
VEHICLE_ID INT IDENTITY(1,1) PRIMARY KEY,
DRIVER_ID INT FOREIGN KEY REFERENCES DRIVER(DRIVER_ID)NOT NULL,
VEHICLE_TYPE INT FOREIGN KEY REFERENCES OBJECT_DETAILS(OBJECT_DETAILS_ID) NOT NULL,
LICENSE VARCHAR(40) NOT NULL,
RCBOOK VARCHAR(50) NOT NULL,
ADHARCHAD VARCHAR(100) NOT NULL,
CREATE_DATE DATE NOT NULL,
MODIFIED_DATE DATE NOT NULL
)

alter table VEHICLE_DETAILS add VehicleName varchar(100)

CREATE TABLE RidePin(
RidePin INT IDENTITY(1,1) PRIMARY KEY,
BOOKED_SERVICE_ID INT FOREIGN KEY REFERENCES BOOKING_REQUEST(BOOKING_ID),
Pin bigint
)

select * from RidePin

alter table RidePin add Booing_Id int FOREIGN KEY REFERENCES BOOKING_REQUEST(BOOKING_ID)

select * from VEHICLE_DETAILS 

select * from PAYMENT
select * from VEHICLE_DETAILS
CREATE TABLE BOOKED_SERVICE
(
BOOKED_SERVICE INT IDENTITY(1,1) PRIMARY KEY,
PHONE_ID INT FOREIGN KEY REFERENCES CUSTOMER(CUSTOMER_ID),
VEHICLE_DETAILS_ID INT FOREIGN KEY REFERENCES VEHICLE_DETAILS(VEHICLE_ID),
DRIVER_ID INT FOREIGN KEY REFERENCES DRIVER(DRIVER_ID),
PATMENT_ID INT FOREIGN KEY REFERENCES PAYMENT(PAYMENT_ID),
STATUS_ID INT FOREIGN KEY REFERENCES OBJECT_DETAILS(OBJECT_DETAILS_ID),
CREATE_DATE DATE NOT NULL,
MODIFIED_DATE DATE NOT NULL
)


alter table BOOKED_SERVICE add BOOKING_ID int foreign key references BOOKING_REQUEST(BOOKING_ID) 

CREATE TABLE DIVER_CONFIRMATION_DETAILS(
DC_DETAILS_ID INT IDENTITY(1,1) PRIMARY KEY,
DRIVER_ID INT FOREIGN KEY REFERENCES DRIVER(DRIVER_ID) NOT NULL,
VEHICLE_ID INT FOREIGN KEY REFERENCES VEHICLE_DETAILS(VEHICLE_ID) NOT NULL,
STATUS_ID INT FOREIGN KEY REFERENCES OBJECT_DETAILS(OBJECT_DETAILS_ID) NOT NULL default(13),
CREATE_DATE DATE NOT NULL,
MODIFIED_DATE DATE NOT NULL
)

CREATE TABLE COMPLETED_SERVICE
(
SERVICEID INT IDENTITY(1,1) PRIMARY KEY,
FEEDBACK VARCHAR(100),
RATINGS int,
CREATE_DATE DATE NOT NULL,
MODIFIED_DATE DATE NOT NULL
)

--values


INSERT INTO OBJECT_TYPES VALUES('GENDER')
INSERT INTO OBJECT_TYPES VALUES('PAYMENT_MODE')
INSERT INTO OBJECT_TYPES VALUES('PAYMENT_STATUS')
INSERT INTO OBJECT_TYPES VALUES('VEHICLE_TYPE')
INSERT INTO OBJECT_TYPES VALUES('RIDE_STATUS')
INSERT INTO OBJECT_TYPES VALUES('DIVER_CONFIRMATION_STATUS')



INSERT INTO OBJECT_DETAILS VALUES(1,'MALE')
INSERT INTO OBJECT_DETAILS VALUES(1,'FEMALE')
INSERT INTO OBJECT_DETAILS VALUES(1,'OTHER')

INSERT INTO OBJECT_DETAILS VALUES(2,'CASH_ON_DELIVERY')

INSERT INTO OBJECT_DETAILS VALUES(3,'COMPLETE')
INSERT INTO OBJECT_DETAILS VALUES(3,'FAILED')

INSERT INTO OBJECT_DETAILS VALUES(4,'BIKE')
INSERT INTO OBJECT_DETAILS VALUES(4,'RIKSHA')
INSERT INTO OBJECT_DETAILS VALUES(4,'CAR')
INSERT INTO OBJECT_DETAILS VALUES(4,'SUV')

INSERT INTO OBJECT_DETAILS VALUES(5,'NEW')
INSERT INTO OBJECT_DETAILS VALUES(5,'CONFIRMED')
INSERT INTO OBJECT_DETAILS VALUES(5,'CANCELED')

INSERT INTO OBJECT_DETAILS VALUES(6,'NEW')
INSERT INTO OBJECT_DETAILS VALUES(6,'REJECTED')
INSERT INTO OBJECT_DETAILS VALUES(6,'CONFIRMED')


INSERT INTO LOCATION_DETAILS VALUES('Vadodara','AirportCircle',390022,22.3072,73.1812,GETDATE(),GETDATE())
INSERT INTO LOCATION_DETAILS VALUES('Vadodara','Mandvi',390027,22.3002,73.2105,GETDATE(),GETDATE())
INSERT INTO LOCATION_DETAILS VALUES('Vadodara','Akota',390022,22.2929,73.1710,GETDATE(),GETDATE())
INSERT INTO LOCATION_DETAILS VALUES('Vadodara','Fatehpura',390022,22.3067,73.2080,GETDATE(),GETDATE())
INSERT INTO LOCATION_DETAILS VALUES('Vadodara','Chani',390022,22.3633,73.1658,GETDATE(),GETDATE())
INSERT INTO LOCATION_DETAILS VALUES('Vadodara','Harni',390022,22.33339,73.2352475,GETDATE(),GETDATE())
INSERT INTO LOCATION_DETAILS VALUES('Vadodara','Waghodiya',390022,22.298426,73.237997,GETDATE(),GETDATE())
INSERT INTO LOCATION_DETAILS VALUES('Vadodara','Tarsali',390022,22.2563,73.2162,GETDATE(),GETDATE())

--selcet

SELECT * FROM OBJECT_TYPES
SELECT * FROM OBJECT_DETAILS
select * from driver
select * from VEHICLE_DETAILS
select * from PHONE_NO
select * from payment

select * from BOOKING_REQUEST
select * from BOOKED_SERVICE 

select * from BOOKED_SERVICE




select * from RidePin
select * from BOOKED_SERVICE
select * from BOOKING_REQUEST


select TOP 1 * from BOOKED_SERVICE order by BOOKING_ID desc 

select TOP 1 * from BOOKING_REQUEST order by PHONE_ID desc
















-----
create   procedure GetEmployees(@id int,@location varchar(50))  
as  
begin  
select distinct tdm.PaymentId,tdm.VehicleId,tdm.PhoneId,tdm.BookingId,tdm.DISTANCE,tdm.LocationAddress,tdm.LocationDetails,tdm.LocationName,tdm.MobileNo,tdm.STATUS_ID from (  
select distinct dr.VEHICLE_TYPE as vehicleType,pk.PAYMENT_ID as PaymentId,bk.PHONE_ID as PhoneId,bk.STATUS_ID,bk.BOOKING_ID as BookingId,bk.VEHICLE_ID as VehicleId,phn.Mobile_No as MobileNo,ld.LOCATION_NAME as LocationName,ld.LOCATION_ADDRESS as LocationA
ddress,bk.DISTANCE,ld.LOCATION_DETAILS as LocationDetails from BOOKING_REQUEST as bk inner join VEHICLE_DETAILS as dr on @id = bk.VEHICLE_ID inner join DRIVER as lcd on dr.DRIVER_ID = lcd.DRIVER_ID inner join LOCATION_DETAILS as ld on @location = ld.LOCAT
ION_NAME inner join PHONE_NO as phn on phn.PHONE_ID = bk.PHONE_ID inner join PAYMENT as pk on pk.BOOKING_ID = bk.BOOKING_ID  
where ld.LOCATION_DETAILS = bk.SOURCE OR ld.LOCATION_DETAILS = bk.DESTINATION  
)as tdm where tdm.STATUS_ID = 11    
end


-----
create   procedure GetEmployees(@id int,@location varchar(50))  
as  
begin  
select distinct 
tdm.PaymentId,
tdm.VehicleId,
tdm.PhoneId,
tdm.BookingId,
tdm.DISTANCE,
tdm.LocationAddress,
tdm.LocationDetails,
tdm.LocationName,
tdm.MobileNo,
tdm.STATUS_ID from (  
select distinct 
pk.PAYMENT_ID as PaymentId,
bk.VEHICLE_ID as VehicleId,
bk.PHONE_ID as PhoneId,
bk.STATUS_ID,bk.BOOKING_ID as BookingId,
bk.DISTANCE,
ld.LOCATION_ADDRESS as LocationAddress,
ld.LOCATION_DETAILS as LocationDetails 
ld.LOCATION_NAME as LocationName,
phn.Mobile_No as MobileNo

from BOOKING_REQUEST as bk inner join VEHICLE_DETAILS as dr on @id = bk.VEHICLE_ID inner join DRIVER as lcd on dr.DRIVER_ID = lcd.DRIVER_ID inner join LOCATION_DETAILS as ld on @location = ld.LOCAT
ION_NAME inner join PHONE_NO as phn on phn.PHONE_ID = bk.PHONE_ID inner join PAYMENT as pk on pk.BOOKING_ID = bk.BOOKING_ID  
where ld.LOCATION_DETAILS = bk.SOURCE OR ld.LOCATION_DETAILS = bk.DESTINATION  
)as tdm where tdm.STATUS_ID = 11    
end